name: Deploy

on:
  push:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Aliyun FC 2
        run: |
          sudo apt-get install python3-setuptools
          sudo pip3 install -U aliyun-fc2 pip

      - name: Build static files
        env:
          VUE_APP_ENABLE_CDN: 1
        run: |
          pip3 install -e .
          npm ci
          npm run build
          python3 -m itecha collectstatic --no-input

      - name: Deploy with Aliyun FC 2
        env:
          FUNCTION_COMPUTE_ARN: ${{ secrets.FUNCTION_COMPUTE_ARN }}
          ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY_ID }}
          SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
        run: |
          pip3 install -t dist/fc .[fc]
          rm -rf dist/fc/numpy*
          (cd dist/fc/django/contrib/ && rm -rf gis humanize postgres redirects sitemaps syndication)
          (cd dist/fc/django/contrib/admin/locale/ && find -maxdepth 1 ! -name "zh_Hans" -exec rm -rf '{}' \;)
          du -s dist/fc/*
          ./setup.py deploy

      - name: Deploy with AWS Lambda
        env:
          AWS_LAMBDA_ARN: ${{ secrets.AWS_LAMBDA_ARN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          sudo apt-get install awscli
          pip3 install -t dist/fc apig-wsgi
          (cd dist/fc && zip -q -r lambda.zip * && mv lambda.zip ../../)
          AWS_REGION=`echo "$AWS_LAMBDA_ARN" | grep -oP "[a-z]+-[a-z]+-\d+"`
          aws lambda update-function-code --function-name $AWS_LAMBDA_ARN --zip-file fileb://lambda.zip --region $AWS_REGION > /dev/null
